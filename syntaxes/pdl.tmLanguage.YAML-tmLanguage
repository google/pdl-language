# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

$schema: 'https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json'
fileTypes:
  - pdl
scopeName: source.pdl
name: Packet Description Language
foldingStartMarker: '\{\s*$'
foldingStopMarker: '^\s*\}'
patterns:
  - include: '#main'
repository:
  main:
    patterns:
      - include: '#comments'
      - include: '#endianness'
      - include: '#declaration'
      - match: '([^\s])'
        name: invalid.illegal.pdl
  comments:
    patterns:
      - include: '#multi_line_comment'
      - match: (//).*
        name: comment.line.double-slash.pdl
        captures:
          '1': {name: punctuation.definition.comment.pdl}
  endianness:
    patterns:      
      - match: \b(little_endian_packets|big_endian_packets)\b
        name: keyword.pdl
  declaration:
    patterns:
      - name: meta.enum.pdl
        begin: '(enum)\s+([a-zA-Z][a-zA-Z0-9_]*)\s*(:)\s*([0-9]+)\s*(\{)'
        beginCaptures:
          '1': {name: storage.type.enum.pdl}
          '2': {name: entity.name.type.enum.pdl}
          '3': {name: punctuation.separator.pdl}
          '4': {name: constant.numeric.decimal.pdl}
          '5': {name: punctuation.section.braces.begin.pdl}
        end: '(\})'
        endCaptures:
          '1': {name: punctuation.section.braces.end.pdl}
        patterns:
          - include: '#enum_body'
      - name: meta.enum.pdl
        begin: '(enum)\s+([a-zA-Z][a-zA-Z0-9_]*)\s*(:)\s*(0[xX][0-9a-fA-F]+)\s*(\{)'
        beginCaptures:
          '1': {name: storage.type.enum.pdl}
          '2': {name: entity.name.type.enum.pdl}
          '3': {name: punctuation.separator.pdl}
          '4': {name: constant.numeric.hex.pdl}
          '5': {name: punctuation.section.braces.begin.pdl}
        end: '(\})'
        endCaptures:
          '1': {name: punctuation.section.braces.end.pdl}
        patterns:
          - include: '#enum_body'
      - name: meta.packet.pdl
        begin: '(packet)\s+([a-zA-Z][a-zA-Z0-9_]*)\s*(\{)'
        beginCaptures:
          '1': {name: storage.type.packet.pdl}
          '2': {name: entity.name.type.packet.pdl}
          '3': {name: punctuation.section.braces.begin.pdl}
        end: '(\})'
        endCaptures:
          '1': {name: punctuation.section.braces.end.pdl}
        patterns:
          - include: '#field_list'
      - name: meta.packet.pdl
        begin: '(packet)\s+([a-zA-Z][a-zA-Z0-9_]*)\s*(:)\s*([a-zA-Z][a-zA-Z0-9_]*)\s*(\{)'
        beginCaptures:
          '1': {name: storage.type.packet.pdl}
          '2': {name: entity.name.type.packet.pdl}
          '3': {name: punctuation.separator.pdl}
          '4': {name: entity.name.pdl}
          '5': {name: punctuation.section.braces.begin.pdl}
        end: '(\})'
        endCaptures:
          '1': {name: punctuation.section.braces.end.pdl}
        patterns:
          - include: '#field_list'
      - name: meta.packet.pdl
        begin: '(packet)\s+([a-zA-Z][a-zA-Z0-9_]*)\s*(:)\s*([a-zA-Z][a-zA-Z0-9_]*)\s*(\()'
        beginCaptures:
          '1': {name: storage.type.packet.pdl}
          '2': {name: entity.name.type.packet.pdl}
          '3': {name: punctuation.separator.pdl}
          '4': {name: entity.name.pdl}
          '5': {name: punctuation.begin.pdl}
        end: '(\))'
        endCaptures:
          '1': {name: punctuation.section.braces.end.pdl}
        patterns:
          - include: '#constraint_list'
      - name: meta.struct.pdl
        begin: '(struct)\s+([a-zA-Z][a-zA-Z0-9_]*)\s*(\{)'
        beginCaptures:
          '1': {name: storage.type.struct.pdl}
          '2': {name: entity.name.type.struct.pdl}
          '3': {name: punctuation.section.braces.begin.pdl}
        end: '(\})'
        endCaptures:
          '1': {name: punctuation.section.braces.end.pdl}
        patterns:
          - include: '#field_list'
      - name: meta.struct.pdl
        begin: '(struct)\s+([a-zA-Z][a-zA-Z0-9_]*)\s*(:)\s*([a-zA-Z][a-zA-Z0-9_]*)\s*(\{)'
        beginCaptures:
          '1': {name: storage.type.struct.pdl}
          '2': {name: entity.name.type.struct.pdl}
          '3': {name: punctuation.separator.pdl}
          '4': {name: entity.name.pdl}
          '5': {name: punctuation.section.braces.begin.pdl}
        end: '(\})'
        endCaptures:
          '1': {name: punctuation.section.braces.end.pdl}
        patterns:
          - include: '#field_list'
      - name: meta.struct.pdl
        begin: '(struct)\s+([a-zA-Z][a-zA-Z0-9_]*)\s*(:)\s*([a-zA-Z][a-zA-Z0-9_]*)\s*(\()'
        beginCaptures:
          '1': {name: storage.type.struct.pdl}
          '2': {name: entity.name.type.struct.pdl}
          '3': {name: punctuation.separator.pdl}
          '4': {name: entity.name.pdl}
          '5': {name: punctuation.begin.pdl}
        end: '(\))'
        endCaptures:
          '1': {name: punctuation.section.braces.end.pdl}
        patterns:
          - include: '#constraint_list'
      - begin: '(\{)'
        beginCaptures:
          '1': {name: punctuation.begin.pdl}
        end: '(\})'
        endCaptures:
          '1': {name: punctuation.section.braces.end.pdl}
        patterns:
          - include: '#field_list'
      - name: meta.group.pdl
        begin: '(group)\s+([a-zA-Z][a-zA-Z0-9_]*)\s*(\{)'
        beginCaptures:
          '1': {name: storage.type.group.pdl}
          '2': {name: entity.name.type.group.pdl}
          '3': {name: punctuation.section.braces.begin.pdl}
        end: '(\})'
        endCaptures:
          '1': {name: punctuation.section.braces.end.pdl}
        patterns:
          - include: '#field_list'
      - name: meta.checksum.pdl
        match: '(checksum)\s+([a-zA-Z][a-zA-Z0-9_]*)\s*(:)\s*([0-9]+)\s*(")([^\"]*)(")'
        captures:
          '1': {name: storage.type.checksum.pdl}
          '2': {name: entity.name.type.checksum.pdl}
          '3': {name: punctuation.separator.pdl}
          '4': {name: constant.numeric.decimal.pdl}
          '5': {name: punctuation.definition.string.begin.aidl}
          '6': {name: string.quoted.double.aidl}
          '7': {name: punctuation.definition.string.end.aidl}
      - name: meta.checksum.pdl
        match: '(checksum)\s+([a-zA-Z][a-zA-Z0-9_]*)\s*(:)\s*(0[xX][0-9a-fA-F]+)\s*(")([^\"]*)(")'
        captures:
          '1': {name: storage.type.checksum.pdl}
          '2': {name: entity.name.type.checksum.pdl}
          '3': {name: punctuation.separator.pdl}
          '4': {name: constant.numeric.hex.pdl}
          '5': {name: punctuation.definition.string.begin.aidl}
          '6': {name: string.quoted.double.aidl}
          '7': {name: punctuation.definition.string.end.aidl}
      - name: meta.custom_field.pdl
        match: '(custom_field)\s+([a-zA-Z][a-zA-Z0-9_]*)\s*(")([^\"]*)(")'
        captures:
          '1': {name: storage.type.custom_field.pdl}
          '2': {name: entity.name.type.custom_field.pdl}
          '3': {name: punctuation.definition.string.begin.aidl}
          '4': {name: string.quoted.double.aidl}
          '5': {name: punctuation.definition.string.end.aidl}
      - name: meta.custom_field.pdl
        match: '(custom_field)\s+([a-zA-Z][a-zA-Z0-9_]*)\s*(:)\s*([0-9]+)\s*(")([^\"]*)(")'
        captures:
          '1': {name: storage.type.custom_field.pdl}
          '2': {name: entity.name.type.custom_field.pdl}
          '3': {name: punctuation.separator.pdl}
          '4': {name: constant.numeric.decimal.pdl}
          '5': {name: punctuation.definition.string.begin.aidl}
          '6': {name: string.quoted.double.aidl}
          '7': {name: punctuation.definition.string.end.aidl}
      - name: meta.custom_field.pdl
        match: '(custom_field)\s+([a-zA-Z][a-zA-Z0-9_]*)\s*(:)\s*(0[xX][0-9a-fA-F]+)\s*(")([^\"]*)(")'
        captures:
          '1': {name: storage.type.custom_field.pdl}
          '2': {name: entity.name.type.custom_field.pdl}
          '3': {name: punctuation.separator.pdl}
          '4': {name: constant.numeric.hex.pdl}
          '5': {name: punctuation.definition.string.begin.aidl}
          '6': {name: string.quoted.double.aidl}
          '7': {name: punctuation.definition.string.end.aidl}
      - name: meta.test.pdl
        begin: '(test)\s+([a-zA-Z][a-zA-Z0-9_]*)\s*(\{)'
        beginCaptures:
          '1': {name: storage.type.enum.pdl}
          '2': {name: entity.name.type.enum.pdl}
          '3': {name: punctuation.section.braces.begin.pdl}
        end: '(\})'
        endCaptures:
          '1': {name: punctuation.section.braces.end.pdl}
        patterns:
          - include: '#test_case_list'
  enum_body:
    patterns:
      - include: '#comments'
      - include: '#enum_body_inner'
      - begin: '(\{)'
        beginCaptures:
          '1': {name: punctuation.section.braces.begin.pdl}
        end: '(\})'
        endCaptures:
          '1': {name: punctuation.section.braces.end.pdl}
        patterns:
          - include: '#enum_body_inner'
  enum_body_inner:
    patterns:
        - include: '#comments'
        - match: =
          name: keyword.operator.assignment.pdl
        - include: '#integer'
        - match: ','
          name: punctuation.separator.pdl
        - match: '[a-zA-Z][a-zA-Z0-9_]*'
          name: entity.name.constant.pdl
  field_list:
    patterns:
      - include: '#comments'
      - match: '[:,]'
        name: punctuation.separator.pdl
      - begin: (\[)
        beginCaptures:
          '1': {name: punctuation.begin.pdl}
        end: (\])
        endCaptures:
          '1': {name: punctuation.section.braces.end.pdl}
        patterns:
          - include: '#field_size'
      - begin: '(\{)'
        beginCaptures:
          '1': {name: punctuation.section.braces.begin.pdl}
        end: '(\})'
        endCaptures:
          '1': {name: punctuation.section.braces.end.pdl}
        patterns:
          - include: '#constraint_list'
      - begin: '(\()'
        beginCaptures:
          '1': {name: punctuation.begin.pdl}
        end: '(\))'
        endCaptures:
          '1': {name: punctuation.end.pdl}
        patterns:
          - include: '#field_parentheses'
      - match: (_body_|_size_|_count_|_payload_|_fixed_|_checksum_start_|_padding_|_reserved_)
        name: keyword.pdl
      - include: '#identifier'
      - include: '#integer'
      - match: '([^\s])'
        name: invalid.illegal.pdl
  field_parentheses:
    patterns:
      - match: ':'
        name: punctuation.separator.pdl
      - match: '(_payload_|_body_)'
        name: keyword.pdl
      - include: '#identifier'
      - include: '#integer'
      - match: '([^\s])'
        name: invalid.illegal.pdl
  field_size:
    patterns:
      - match: (\+)\s*([0-9]+) # SIZE_MODIFIER
        captures:
          '1': {name: keyword.operator.arithmetic.pdl}
          '2': {name: constant.numeric.decimal.pdl}
      - include: '#integer'
      - match: '([^\s])'
        name: invalid.illegal.pdl
  constraint_list:
    patterns:
      - match: ','
        name: punctuation.separator.pdl
      - match: '='
        name: punctuation.pdl
      - include: '#integer'
      - include: '#identifier'
  test_case_list:
    patterns:
      - match: ','
        name: punctuation.separator.pdl
      - include: '#string'
      - match: '([^\s])'
        name: invalid.illegal.pdl
  identifier:
    patterns:
      - match: '[a-zA-Z][a-zA-Z0-9_]*'
        name: entity.name.pdl
  integer:
    patterns:
      - match: '0[xX][0-9a-fA-F]+'
        name: constant.numeric.hex.pdl
      - match: '[0-9]+'
        name: constant.numeric.decimal.pdl
  string:
    patterns:
      - match: '(")([^\"]*)(")'
        captures:
          '1': {name: punctuation.definition.string.begin.aidl}
          '2': {name: string.quoted.double.aidl}
          '3': {name: punctuation.definition.string.end.aidl}
  multi_line_comment:
    patterns:
      - begin: (/\*\*)
        beginCaptures:
          '1': {name: punctuation.definition.comment.aidl}
        name: comment.block.documentation.aidl
        end: (\*/)
        endCaptures:
          '1': {name: punctuation.definition.comment.aidl}
      - begin: (/\*)
        beginCaptures:
          '1': {name: punctuation.definition.comment.aidl}
        name: comment.block.aidl
        end: (\*/)
        endCaptures:
          '1': {name: punctuation.definition.comment.aidl}
